alias color : vec3;
$color { my = vec3(); }
$color (r: num, g: num, b: num) { my = vec3(r, g, b); }

interval intensity = interval(0.000, 0.999);

@write_color (output: ofstream, pixel_color: color, samples_per_pixel: num) {
    num r = pixel_color.x();
    num g = pixel_color.y();
    num b = pixel_color.z();

    ## Divide the color by the number of samples.
    num scale = 1.0 / samples_per_pixel;
    r *= scale;
    g *= scale;
    b *= scale;

    ## Apply the linear to gamma transform.
    r = linear_to_gamma(r);
    g = linear_to_gamma(g);
    b = linear_to_gamma(b);

    ## Write the translated [0,255] value of each color component.
    output.write(
        "%d %d %d%n", 
        floor(256 * intensity.clamp(r)),
        floor(256 * intensity.clamp(g)),
        floor(256 * intensity.clamp(b))
    );
}
